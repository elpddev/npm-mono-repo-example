version: 2

defaults: &defaults
  working_directory: ~/repo
  docker:
  - image: circleci/node

jobs:
  checkout:
    <<: *defaults
    steps:
    - checkout
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "package.json" }}
        - v1-dependencies-
    - run:
        name: Authenticate with registry
        command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc && cp .npmrc ~/.npmrc
    - run:
        name: npm install
        command: npm install
      - run:
          name: lock lerna changed analysis
          command: |
            # due to the fact that the CI will can modify files during the CI, we fix lerna changed output into a file, so that executing commands on changed packages will affect the packages listed in this file only.
            node_modules/.bin/lerna changed --json > lerna-changed.lock || touch lerna-changed.lock
    - run:
        name: changed packages
        command: npm run exec-changed node_modules/.bin/lerna list      
    - run:
        name: bootstrap relevant packages
        command: npm run exec-changed node_modules/.bin/lerna bootstrap
    - save_cache:
        paths:
        - node_modules
        key: v1-dependencies-{{ checksum "package.json" }}
    - persist_to_workspace:
        root: ~/repo
        paths: .
  test:
    <<: *defaults
    steps:
    - attach_workspace:
        at: ~/repo
    - run:
        name: Run tests
        command: |
            # make sure we store the test results of all projects
            export JEST_JUNIT_OUTPUT=`pwd`/reports/junit/
            npm run exec-changed node_modules/.bin/lerna exec 'JEST_JUNIT_OUTPUT=$JEST_JUNIT_OUTPUT/\$LERNA_PACKAGE_NAME-test-results.xml npm run test:ci'
    - run:
       name: Authenticate with NPM
       command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc && cp .npmrc ~/.npmrc
    - store_test_results:
        path: reports/junit/
    - store_artifacts:
        path: reports/junit/         
  lint:
    <<: *defaults
    steps:
    - attach_workspace:
        at: ~/repo
    - run:
        name: Run lint
        command: |
         export LINT_JUNIT_OUTPUT=`pwd`/reports/junit/
         npm run exec-changed node_modules/.bin/lerna exec 'LINT_JUNIT_OUTPUT=$LINT_JUNIT_OUTPUT/\$LERNA_PACKAGE_NAME-lint-results.xml npm run lint:ci'
    - store_test_results:
        path: reports/junit/
    - store_artifacts:
        path: reports/junit/             
  bump-version:
    <<: *defaults
    steps:
    - attach_workspace:
        at: ~/repo
    - run:
        name: Running version and changelog generate
        command: |
          git config credential.helper 'cache --timeout=120'
          git config user.email "<email>"
          git config user.name "Deployment Bot"
          git config --global push.default simple
          git config --global url."https://${GITHUB_TOKEN}@github.com/".insteadOf "git@github.com:"
          git stash
          npm run exec-changed node_modules/.bin/lerna version --yes
    - persist_to_workspace:
        root: ~/repo
        paths: .          
  publish:
    <<: *defaults
    steps:
    - attach_workspace:
        at: ~/repo
    - run:
       name: Authenticate with NPM
       command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc && cp .npmrc ~/.npmrc        
    - run:
        name: Publish packages
        command: npm run exec-changed node_modules/.bin/lerna publish from-package --yes
workflows:
  version: 2
  test-deploy:
    jobs:
    - checkout:
        context: company-context
    - test:
        context: company-context
        requires:
        - checkout
    - lint:
        context: company-context
        requires:
        - checkout        
    - bump-version:
        context: company-context
        filters:
          branches:
            only: master
        requires:
        - test
        - lint
    - publish:
        context: company-context
        requires:
        - bump-version
        filters:
          branches:
            only:
            - master
